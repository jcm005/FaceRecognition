{"ast":null,"code":"var _jsxFileName = \"/Users/joemattern/Code/2021/FaceRecognition/src/App.js\";\nimport './App.css';\nimport Navigation from './componenets/navigation/Navigation';\nimport Logo from './componenets/logo/Logo';\nimport Rank from './componenets/rank/rank';\nimport ImageLink from './componenets/imageLink/imageLink';\nimport Particles from 'react-particles-js';\nimport { Component } from 'react';\nimport FaceReco from './componenets/face';\nimport Clarifai from 'clarifai';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst app = new Clarifai.App({\n  apiKey: '8574ae4ec5094e459de26dbf89fe7742'\n});\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.calculateFaceLocation = data => {\n      var faces = data;\n      console.log(faces);\n      const image = document.getElementById('inputimage');\n      const width = Number(image.width);\n      const height = Number(image.height);\n      return {\n        leftcol: image.left_col * width,\n        topRow: image.top_row * height,\n        rightcol: width - image.right_col * width,\n        bottomrow: height - image.bottom_row * height\n      };\n    };\n\n    this.displayFaceBox = box => {\n      console.log(box);\n      this.setState({\n        bound: box\n      });\n    };\n\n    this.onInputChange = event => {\n      this.setState({\n        input: event.target.value\n      });\n    };\n\n    this.onButtonSubmit = () => {\n      var proccessed = [];\n      this.setState({\n        imageUrl: this.state.input\n      });\n      app.models.predict(Clarifai.FACE_DETECT_MODEL, this.state.input).then(response => {\n        var face = response.outputs[0].data.regions[0].data_regions;\n        console.log(faces);\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.state = {\n      input: '',\n      imageUrl: '',\n      bound: {}\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Particles, {\n        className: \"particles\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Rank, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ImageLink, {\n        onInputChange: this.onInputChange,\n        onSubmit: this.onButtonSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FaceReco, {\n        imageUrl: this.state.imageUrl,\n        bound: this.state.bound\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/joemattern/Code/2021/FaceRecognition/src/App.js"],"names":["Navigation","Logo","Rank","ImageLink","Particles","Component","FaceReco","Clarifai","app","App","apiKey","constructor","calculateFaceLocation","data","faces","console","log","image","document","getElementById","width","Number","height","leftcol","left_col","topRow","top_row","rightcol","right_col","bottomrow","bottom_row","displayFaceBox","box","setState","bound","onInputChange","event","input","target","value","onButtonSubmit","proccessed","imageUrl","state","models","predict","FACE_DETECT_MODEL","then","response","face","outputs","regions","data_regions","catch","err","render"],"mappings":"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","sourcesContent":["import './App.css';\nimport Navigation from './componenets/navigation/Navigation';\nimport Logo from './componenets/logo/Logo';\nimport Rank from './componenets/rank/rank'\nimport ImageLink from './componenets/imageLink/imageLink';\nimport Particles from 'react-particles-js';\nimport { Component } from 'react';\nimport FaceReco from './componenets/face';\nimport Clarifai from 'clarifai';\n\n\nconst app = new Clarifai.App({ apiKey: '8574ae4ec5094e459de26dbf89fe7742' });\n\nclass App extends Component {\n\n  constructor() {\n    super();\n    this.state = {\n      input: '',\n      imageUrl: '',\n      bound: {}\n    }\n  }\n\n\n\n  calculateFaceLocation = (data) => {\n\n    var faces = (data);\n    console.log(faces);\n\n\n    const image = document.getElementById('inputimage');\n    const width = Number(image.width);\n    const height = Number(image.height);\n    return {\n\n      leftcol: image.left_col * width,\n      topRow: image.top_row * height,\n      rightcol: width - (image.right_col * width),\n      bottomrow: height - (image.bottom_row * height),\n\n    }\n\n\n\n  }\n\n  displayFaceBox = (box) => {\n    console.log(box);\n    this.setState({ bound: box })\n  }\n\n  onInputChange = (event) => {\n    this.setState({ input: event.target.value })\n  }\n\n  onButtonSubmit = () => {\n    var proccessed = [];\n    this.setState({ imageUrl: this.state.input })\n\n    app.models.predict(Clarifai.FACE_DETECT_MODEL, this.state.input)\n      .then(response => {\n        var face = (response.outputs[0].data.regions[0].data_regions)\n        console.log(faces);\n      }\n\n      )\n      .catch((err => {\n        console.log(err);\n      }))\n\n  }\n\n  render() {\n\n    return (\n      <div className=\"App\" >\n\n        <Particles className='particles' />\n        <Navigation />\n        <Logo />\n        <Rank />\n        <ImageLink onInputChange={this.onInputChange} onSubmit={this.onButtonSubmit} />\n        <FaceReco imageUrl={this.state.imageUrl} bound={this.state.bound} />\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n"]},"metadata":{},"sourceType":"module"}