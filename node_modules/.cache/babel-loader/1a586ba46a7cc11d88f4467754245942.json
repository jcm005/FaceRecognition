{"ast":null,"code":"var _jsxFileName = \"/Users/joemattern/Code/2021/FaceRecognition/src/App.js\";\nimport './App.css';\nimport Navigation from './componenets/navigation/Navigation';\nimport Logo from './componenets/logo/Logo';\nimport Rank from './componenets/rank/rank';\nimport ImageLink from './componenets/imageLink/imageLink';\nimport SignIn from './componenets/signin/signin';\nimport Particles from 'react-particles-js';\nimport Register from './componenets/signin/register';\nimport { Component } from 'react';\nimport FaceReco from './componenets/face';\nimport Clarifai from 'clarifai';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst app = new Clarifai.App({\n  apiKey: '8574ae4ec5094e459de26dbf89fe7742'\n});\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.loadUser = data => {\n      this.setState({\n        user: {\n          id: data.id,\n          name: data.name,\n          email: data.email,\n          entries: data.entries,\n          joined: data.joined\n        }\n      });\n    };\n\n    this.calculateFaceLocation = data => {\n      const faces = data.outputs[0].data.regions[0].region_info.bounding_box;\n      const image = document.getElementById('inputimage');\n      const width = Number(image.width);\n      const height = Number(image.height);\n      return {\n        leftcol: faces.left_col * width,\n        topRow: faces.top_row * height,\n        rightcol: width - faces.right_col * width,\n        bottomrow: height - faces.bottom_row * height\n      };\n    };\n\n    this.displayFaceBox = box => {\n      console.log(box);\n      this.setState({\n        bound: box\n      });\n    };\n\n    this.onInputChange = event => {\n      this.setState({\n        input: event.target.value\n      });\n    };\n\n    this.onButtonSubmit = () => {\n      var proccessed = [];\n      this.setState({\n        imageUrl: this.state.input\n      });\n      app.models.predict(Clarifai.FACE_DETECT_MODEL, this.state.input).then(response => {\n        if (response) {\n          fetch('http://localhost3010/image', {\n            method: 'put',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              id: this.state.user.id\n            })\n          });\n        }\n\n        this.displayFaceBox(this.calculateFaceLocation(response));\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.onRouteChange = route => {\n      if (route === 'signout') {\n        this.setState({\n          isSignedIn: false\n        });\n      } else if (route === 'home') {\n        this.setState({\n          isSignedIn: true\n        });\n      }\n\n      this.setState({\n        route: route\n      });\n    };\n\n    this.state = {\n      input: '',\n      imageUrl: '',\n      bound: {},\n      route: 'signin',\n      isSignedIn: false,\n      user: {\n        id: '',\n        name: '',\n        email: '',\n        entries: 0,\n        joined: new Date()\n      }\n    };\n  }\n\n  render() {\n    const {\n      isSignedIn,\n      imageUrl,\n      route,\n      bound\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Particles, {\n        className: \"particles\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Navigation, {\n        onRouteChange: this.onRouteChange,\n        isSignedIn: isSignedIn\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), route === 'home' ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Rank, {\n          name: this.state.user.name,\n          entries: this.state.user.entries\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ImageLink, {\n          onInputChange: this.onInputChange,\n          onSubmit: this.onButtonSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FaceReco, {\n          imageUrl: this.state.imageUrl,\n          bound: bound\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 11\n      }, this) : route === 'signin' ? /*#__PURE__*/_jsxDEV(SignIn, {\n        onRouteChange: this.onRouteChange,\n        loadUser: this.loadUser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 15\n      }, this) : /*#__PURE__*/_jsxDEV(Register, {\n        loadUser: this.loadUser,\n        onRouteChange: this.onRouteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/joemattern/Code/2021/FaceRecognition/src/App.js"],"names":["Navigation","Logo","Rank","ImageLink","SignIn","Particles","Register","Component","FaceReco","Clarifai","app","App","apiKey","constructor","loadUser","data","setState","user","id","name","email","entries","joined","calculateFaceLocation","faces","outputs","regions","region_info","bounding_box","image","document","getElementById","width","Number","height","leftcol","left_col","topRow","top_row","rightcol","right_col","bottomrow","bottom_row","displayFaceBox","box","console","log","bound","onInputChange","event","input","target","value","onButtonSubmit","proccessed","imageUrl","state","models","predict","FACE_DETECT_MODEL","then","response","fetch","method","headers","body","JSON","stringify","catch","err","onRouteChange","route","isSignedIn","Date","render"],"mappings":"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","sourcesContent":["import './App.css';\nimport Navigation from './componenets/navigation/Navigation';\nimport Logo from './componenets/logo/Logo';\nimport Rank from './componenets/rank/rank'\nimport ImageLink from './componenets/imageLink/imageLink';\nimport SignIn from './componenets/signin/signin'\nimport Particles from 'react-particles-js';\nimport Register from './componenets/signin/register'\n\nimport { Component } from 'react';\nimport FaceReco from './componenets/face';\nimport Clarifai from 'clarifai';\n\n\nconst app = new Clarifai.App({ apiKey: '8574ae4ec5094e459de26dbf89fe7742' });\n\nclass App extends Component {\n\n  constructor() {\n    super();\n    this.state = {\n      input: '',\n      imageUrl: '',\n      bound: {},\n      route: 'signin',\n      isSignedIn: false,\n      user: {\n        id: '',\n        name: '',\n        email: '',\n        entries: 0,\n        joined: new Date()\n\n      }\n    }\n  }\n\n  loadUser = (data) => {\n    this.setState({\n      user: {\n        id: data.id,\n        name: data.name,\n        email: data.email,\n        entries: data.entries,\n        joined: data.joined\n\n      }\n    })\n  }\n\n\n  calculateFaceLocation = (data) => {\n\n    const faces = (data.outputs[0].data.regions[0].region_info.bounding_box);\n    const image = document.getElementById('inputimage');\n    const width = Number(image.width);\n    const height = Number(image.height);\n    return {\n\n      leftcol: faces.left_col * width,\n      topRow: faces.top_row * height,\n      rightcol: width - (faces.right_col * width),\n      bottomrow: height - (faces.bottom_row * height),\n    }\n  }\n\n  displayFaceBox = (box) => {\n    console.log(box);\n    this.setState({ bound: box })\n  }\n  onInputChange = (event) => {\n    this.setState({ input: event.target.value })\n  }\n  onButtonSubmit = () => {\n    var proccessed = [];\n    this.setState({ imageUrl: this.state.input })\n    app.models.predict(Clarifai.FACE_DETECT_MODEL, this.state.input)\n      .then(response => {\n        if (response) {\n          fetch('http://localhost3010/image', {\n            method: 'put',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({\n              id: this.state.user.id\n            })\n          })\n        }\n        this.displayFaceBox(this.calculateFaceLocation(response)\n        );\n      }\n\n      )\n      .catch((err => {\n        console.log(err);\n      }))\n\n  }\n  onRouteChange = (route) => {\n    if (route === 'signout') {\n      this.setState({ isSignedIn: false })\n    } else if (route === 'home') {\n      this.setState({ isSignedIn: true })\n\n    }\n    this.setState({ route: route });\n\n  }\n\n  render() {\n\n    const { isSignedIn, imageUrl, route, bound } = this.state;\n\n    return (\n      <div className=\"App\" >\n\n        <Particles className='particles'\n        />\n        <Navigation\n          onRouteChange={this.onRouteChange}\n          isSignedIn={isSignedIn} />\n\n        {route === 'home'\n          ?\n          <div>\n            <Logo />\n            <Rank name={this.state.user.name} entries={this.state.user.entries} />\n            <ImageLink\n              onInputChange={this.onInputChange}\n              onSubmit={this.onButtonSubmit} />\n            <FaceReco imageUrl={this.state.imageUrl} bound={bound} />\n          </div>\n\n          : (\n            route === 'signin'\n              ?\n              <SignIn\n                onRouteChange={this.onRouteChange}\n                loadUser={this.loadUser}\n              />\n              :\n              <Register loadUser={this.loadUser}\n                onRouteChange={this.onRouteChange} />\n          )\n\n\n\n        }\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n"]},"metadata":{},"sourceType":"module"}