{"ast":null,"code":"var _jsxFileName = \"/Users/joemattern/Code/2021/smart/src/App.js\";\nimport './App.css';\nimport Navigation from './componenets/navigation/Navigation';\nimport Logo from './componenets/logo/Logo';\nimport Rank from './componenets/rank/rank';\nimport ImageLink from './componenets/imageLink/imageLink';\nimport Particles from 'react-particles-js';\nimport { Component } from 'react';\nimport Clarifai from 'clarifai-nodejs-grpc';\nimport FaceReco from './componenets/face';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst particleOptions = {\n  particles: {\n    number: {\n      value: 30,\n      density: {\n        enable: true,\n        value_area: 8000\n      }\n    }\n  }\n};\n\nconst {\n  ClarifaiStub,\n  grpc\n} = require(\"clarifai-nodejs-grpc\");\n\nconst stub = ClarifaiStub.grpc();\nconst metadata = new grpc.Metadata();\nmetadata.set(\"authorization\", \"8574ae4ec5094e459de26dbf89fe7742\");\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.onInputChange = event => {\n      console.log(event);\n    };\n\n    this.onButtonSubmit = () => {\n      stub.PostModelOutputs({\n        // This is the model ID of a publicly available General model. You may use any other public or custom model ID.\n        model_id: \"aaa03c23b3724a16a56b629203edc62c\",\n        inputs: [{\n          data: {\n            image: {\n              url: \"https://samples.clarifai.com/dog2.jpeg\"\n            }\n          }\n        }]\n      }, metadata, (err, response) => {\n        if (err) {\n          console.log(\"Error: \" + err);\n          return;\n        }\n\n        if (response.status.code !== 10000) {\n          console.log(\"Received failed status: \" + response.status.description + \"\\n\" + response.status.details);\n          return;\n        }\n\n        console.log(\"Predicted concepts, with confidence values:\");\n\n        for (const c of response.outputs[0].data.concepts) {\n          console.log(c.name + \": \" + c.value);\n        }\n      });\n    };\n\n    this.state = {\n      input: ''\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Particles, {\n        className: \"particles\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Rank, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ImageLink, {\n        onInputChange: this.onInputChange,\n        onSubmit: this.onButtonSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FaceReco, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/joemattern/Code/2021/smart/src/App.js"],"names":["Navigation","Logo","Rank","ImageLink","Particles","Component","Clarifai","FaceReco","particleOptions","particles","number","value","density","enable","value_area","ClarifaiStub","grpc","require","stub","metadata","Metadata","set","App","constructor","onInputChange","event","console","log","onButtonSubmit","PostModelOutputs","model_id","inputs","data","image","url","err","response","status","code","description","details","c","outputs","concepts","name","state","input","render"],"mappings":"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","sourcesContent":["import './App.css';\nimport Navigation from './componenets/navigation/Navigation';\nimport Logo from './componenets/logo/Logo';\nimport Rank from './componenets/rank/rank'\nimport ImageLink from './componenets/imageLink/imageLink';\nimport Particles from 'react-particles-js';\nimport { Component } from 'react';\nimport Clarifai from 'clarifai-nodejs-grpc';\nimport FaceReco from './componenets/face';\n\nconst particleOptions = {\n  particles: {\n    number: {\n      value: 30,\n      density: {\n        enable: true,\n        value_area: 8000\n      }\n    }\n  }\n}\n\nconst { ClarifaiStub, grpc } = require(\"clarifai-nodejs-grpc\");\n\nconst stub = ClarifaiStub.grpc();\n\nconst metadata = new grpc.Metadata();\nmetadata.set(\"authorization\", \"8574ae4ec5094e459de26dbf89fe7742\");\n\n\nclass App extends Component {\n\n  constructor() {\n    super();\n    this.state = {\n      input: '',\n    }\n  }\n\n\n  onInputChange = (event) => {\n    console.log(event);\n  }\n\n  onButtonSubmit = () => {\n    stub.PostModelOutputs(\n      {\n        // This is the model ID of a publicly available General model. You may use any other public or custom model ID.\n        model_id: \"aaa03c23b3724a16a56b629203edc62c\",\n        inputs: [{ data: { image: { url: \"https://samples.clarifai.com/dog2.jpeg\" } } }]\n      },\n      metadata,\n      (err, response) => {\n        if (err) {\n          console.log(\"Error: \" + err);\n          return;\n        }\n\n        if (response.status.code !== 10000) {\n          console.log(\"Received failed status: \" + response.status.description + \"\\n\" + response.status.details);\n          return;\n        }\n\n        console.log(\"Predicted concepts, with confidence values:\")\n        for (const c of response.outputs[0].data.concepts) {\n          console.log(c.name + \": \" + c.value);\n        }\n      }\n    );\n\n  };\n\n  render() {\n\n    return (\n      <div className=\"App\" >\n\n        <Particles className='particles' />\n        <Navigation />\n        <Logo />\n        <Rank />\n        <ImageLink onInputChange={this.onInputChange} onSubmit={this.onButtonSubmit} />\n        <FaceReco />\n\n      </div>\n    );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}